name: Build, test, and publish Docker images

on:
  pull_request:
    paths-ignore:
      - "*.md"
      - "LICENSE"
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - "LICENSE"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  LATEST_TAG: latest

jobs:
  build-test-publish:
    name: Build, test, and publish Docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: >
      !contains(github.event.head_commit.message, 'ci skip') &&
      !contains(github.event.pull_request.title, 'ci skip')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
          cache: 'pip'
          cache-dependency-path: '**/requirements-test.txt'

      - name: Test Docker image
        run: |
          make test
          IMAGE_NAME=${{ env.IMAGE_NAME }}
          TAG=${{ env.LATEST_TAG }}

      - name: Set up QEMU
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: github.ref == 'refs/heads/main'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=raw,value=${{ env.LATEST_TAG }}

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
